<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>William@blog</title>
  
  <subtitle>BAIDI-coder</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://baidi-coder.github.io/"/>
  <updated>2020-05-31T08:10:20.435Z</updated>
  <id>https://baidi-coder.github.io/</id>
  
  <author>
    <name>Weiliang Bai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>技术/备忘/Hexo icarus 博客维护</title>
    <link href="https://baidi-coder.github.io/posts/6e7bdc/"/>
    <id>https://baidi-coder.github.io/posts/6e7bdc/</id>
    <published>2020-05-30T07:46:57.107Z</published>
    <updated>2020-05-31T08:10:20.435Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本指令&quot;&gt;基本指令&lt;/h2&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;基本指令&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs plain&quot;&gt;&amp;#x2F;*npm指令*&amp;#x2F;&lt;br&gt;npm install&amp;#x2F;uninstall xxx&lt;br&gt;&amp;#x2F;&amp;#x2F;执行package.json中定义的脚本&lt;br&gt;npm run server&lt;br&gt;&lt;br&gt;&amp;#x2F;*hexo指令*&amp;#x2F;&lt;br&gt;hexo cl &amp;amp;&amp;amp; hexo g &amp;amp;&amp;amp; hexo s	&amp;#x2F;&amp;#x2F;清理，生成，本地服务器&lt;br&gt;hexo d &amp;#x2F;&amp;#x2F;部署&lt;br&gt;hexagon -l &amp;#x2F;&amp;#x2F;查看插件&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;更多-Hexo-指令&quot;&gt;更多 Hexo 指令&lt;/h2&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="备忘" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="Hexo" scheme="https://baidi-coder.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>技术/开发/AndroidLearning</title>
    <link href="https://baidi-coder.github.io/posts/fae5c3cd/"/>
    <id>https://baidi-coder.github.io/posts/fae5c3cd/</id>
    <published>2020-05-30T00:47:01.881Z</published>
    <updated>2020-05-30T13:23:45.757Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1&gt;Android Studio 入坑笔记&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Android Studio 自动创建 resource id 失败
&lt;ul&gt;
&lt;li&gt;重启 AS。&lt;/li&gt;
&lt;li&gt;Sync with file system 同步一下？&lt;/li&gt;
&lt;li&gt;查看
        
      
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="开发" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/"/>
    
    
  </entry>
  
  <entry>
    <title>杂项/Ideas</title>
    <link href="https://baidi-coder.github.io/posts/853a41fd/"/>
    <id>https://baidi-coder.github.io/posts/853a41fd/</id>
    <published>2020-05-30T00:46:43.782Z</published>
    <updated>2020-05-30T00:48:39.764Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1&gt;Williams’s Fantastic Ideas&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Github 有一个叫做 &lt;strong&gt;app ideas&lt;/strong&gt;
        
      
    
    </summary>
    
    
      <category term="杂项" scheme="https://baidi-coder.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>技术/语言/Java&amp;Kotlin语法对照</title>
    <link href="https://baidi-coder.github.io/posts/7a368ad4/"/>
    <id>https://baidi-coder.github.io/posts/7a368ad4/</id>
    <published>2020-05-30T00:46:29.240Z</published>
    <updated>2020-05-30T13:32:55.361Z</updated>
    
    <summary type="html">
    
      比较两种语言代码的不同，方便更好的记忆与理解 Kotlin 和 Java 的关系，体会语法糖的真香。
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="语言" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Java" scheme="https://baidi-coder.github.io/tags/Java/"/>
    
      <category term="Kotlin" scheme="https://baidi-coder.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>技术/笔记/第一行代码 Android（第三版）读书笔记</title>
    <link href="https://baidi-coder.github.io/posts/37a431d8/"/>
    <id>https://baidi-coder.github.io/posts/37a431d8/</id>
    <published>2020-05-30T00:46:16.396Z</published>
    <updated>2020-05-30T13:34:07.788Z</updated>
    
    <summary type="html">
    
      《第一行代码 Android 3rd》个人笔记，归纳了该书中的主要知识点。
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="笔记" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Android" scheme="https://baidi-coder.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>技术/语言/LatexTikz</title>
    <link href="https://baidi-coder.github.io/posts/9b17222d/"/>
    <id>https://baidi-coder.github.io/posts/9b17222d/</id>
    <published>2020-05-30T00:45:41.254Z</published>
    <updated>2020-05-31T03:28:27.657Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1&gt;Tikz 绘图学习笔记&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;注意事项: \begin{tikzpicture} 环境下每一行命令结尾都要加分号;&lt;/p&gt;
&lt;p&gt;\node, \coordinate, \draw 语法参考：&lt;a
        
      
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="语言" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Latex" scheme="https://baidi-coder.github.io/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>技术/语言/Kotlin</title>
    <link href="https://baidi-coder.github.io/posts/ec3dabc7/"/>
    <id>https://baidi-coder.github.io/posts/ec3dabc7/</id>
    <published>2020-05-30T00:45:39.212Z</published>
    <updated>2020-05-30T13:32:25.634Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Kotlin 可以编译成Java字节码，也可以编译成 JavaScript，方便在没有 JVM 的设备上运行。&lt;/li&gt;
&lt;li&gt;kotlin源文件不需要相匹配的目录和包，源文件可以放在任何文件目录。&lt;/li&gt;
&lt;li&gt;$a 和 ${a.func()}我是真没话说。&lt;/li&gt;
&lt;li&gt;完善的NULL检查机制 “!!, ?, ?:”（当一个引用可能为 null 值时, 对应的类型声明必须明确地标记为可为 null。方法是： “Type后 + ？”）&lt;/li&gt;
&lt;li&gt;玩转for循环：可以方便的指定遍历的步长，范围。（ …, step, downTo, in, until)&lt;/li&gt;
&lt;li&gt;Kotlin 的基本数值类型包括 Byte、Short、Int、Long、Float、Double 等。&lt;strong&gt;不同于 Java 的是，字符==不属于==数值类型&lt;/strong&gt;，是一个独立的数据类型。&lt;/li&gt;
&lt;li&gt;支持二进制字面量，数值类型混入下划线增加语义性。&lt;/li&gt;
&lt;li&gt;有些时候较小类型不会隐式转换成较大类型，需要手动调用 .toXXX() 来进行显示的类型转换。&lt;/li&gt;
&lt;li&gt;和 &lt;em&gt;golang&lt;/em&gt; 一样少了分号（这就是语法糖吗i了i了&lt;/li&gt;
&lt;li&gt;if-else 语句与when语句等可以视为 ==表达式==（可赋值&lt;/li&gt;
&lt;li&gt;when 与 -&amp;gt; 符号构成强大的分支控制。&lt;/li&gt;
&lt;li&gt;完全抛弃&lt;em&gt;基本数据类型&lt;/em&gt;改用&lt;em&gt;对象数据类型&lt;/em&gt;“。&lt;/li&gt;
&lt;li&gt;“fun xxx() = xxx” 这个语法糖结合 if else, when 等特性可以打出漂亮的组合拳。&lt;/li&gt;
&lt;li&gt;class 继承的时候对继承的父类后面&lt;em&gt;一般&lt;/em&gt;要加括号（因为 java 继承中必调用父类构造函数）且此构造函数必调用著构造函数。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="语言" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Kotlin" scheme="https://baidi-coder.github.io/tags/Kotlin/"/>
    
  </entry>
  
  <entry>
    <title>技术/语言/JavaLearning</title>
    <link href="https://baidi-coder.github.io/posts/6374ed46/"/>
    <id>https://baidi-coder.github.io/posts/6374ed46/</id>
    <published>2020-05-30T00:45:36.071Z</published>
    <updated>2020-05-30T13:20:28.168Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1&gt;2020-4-28&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;content: 对象与类，基本数据类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;int a, b; 则“a=b”表达式为int类型，不会自动转化为boolean类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Java
        
      
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="语言" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="Java" scheme="https://baidi-coder.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>技术/工具/IDEA 学习笔记</title>
    <link href="https://baidi-coder.github.io/posts/5a1e79ff/"/>
    <id>https://baidi-coder.github.io/posts/5a1e79ff/</id>
    <published>2020-05-30T00:45:31.551Z</published>
    <updated>2020-05-30T13:53:32.559Z</updated>
    
    <summary type="html">
    
      &lt;h1&gt;IDEA基础功能概览：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;shortcut(edit, 代码片段, 功能), 版本控制(VCS: git, github, local history)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debug, javadoc generator, database, web deployment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;project&amp;amp;module 等概念, 模板, 项目结构查询管理&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Tips&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;代码段：main&lt;/li&gt;
&lt;li&gt;sout标准输出&lt;/li&gt;
&lt;li&gt;soutv输出变量，soutm输出方法名，soutp输出命令行参数&lt;/li&gt;
&lt;li&gt;变量名.sout输出变量&lt;/li&gt;
&lt;li&gt;iter增强型for循环&lt;/li&gt;
&lt;li&gt;引用名.for 迭代指定引用类型&lt;/li&gt;
&lt;li&gt;实例名.fori顺序遍历 xxx.forr倒序遍历&lt;/li&gt;
&lt;li&gt;ifn --“if xxx is null”, inn --“if not null”&lt;/li&gt;
&lt;li&gt;xxx.nn, xxx.ifn&lt;/li&gt;
&lt;li&gt;JavaLea&lt;/li&gt;
&lt;li&gt;条件断点 --右键断点处&lt;/li&gt;
&lt;li&gt;ctrl+u 查看表达式的值&lt;/li&gt;
&lt;li&gt;Tools javadoc generator:&lt;/li&gt;
&lt;li&gt;Local: zh_CN; Other command line args: encoding UTF-8 -charset UTF-8&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="工具" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>技术/备忘/小技巧手册</title>
    <link href="https://baidi-coder.github.io/posts/fac7f463/"/>
    <id>https://baidi-coder.github.io/posts/fac7f463/</id>
    <published>2020-05-30T00:45:17.470Z</published>
    <updated>2020-05-30T13:13:55.706Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1&gt;每天一个避坑小技巧&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;解决网站元素（例如图片）加载不出来的方法
&lt;ol&gt;
&lt;li&gt;浏览器下审查该元素的URL地址，然后在搜索他的域名对应的地址（&lt;a
        
      
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="备忘" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="踩坑" scheme="https://baidi-coder.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>技术/备忘/IDE&amp;Editor Shortcuts Query</title>
    <link href="https://baidi-coder.github.io/posts/fde8aecf/"/>
    <id>https://baidi-coder.github.io/posts/fde8aecf/</id>
    <published>2020-05-30T00:45:17.467Z</published>
    <updated>2020-05-30T13:18:07.430Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1&gt;各大 IDE &amp;amp; Editor 快捷键对照表&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;操作&lt;/th&gt;
&lt;th&gt;IntelliJ IDEA&lt;/th&gt;
&lt;th&gt;Visual Studio Code&lt;/th&gt;
&lt;th&gt;Visual
        
      
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="备忘" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%A4%87%E5%BF%98/"/>
    
    
  </entry>
  
  <entry>
    <title>技术/备忘/CMD 指令备忘</title>
    <link href="https://baidi-coder.github.io/posts/369ceeb5/"/>
    <id>https://baidi-coder.github.io/posts/369ceeb5/</id>
    <published>2020-05-30T00:45:17.465Z</published>
    <updated>2020-05-30T13:14:39.574Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1&gt;CMD 指令备忘&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Process 类
&lt;ul&gt;
&lt;li&gt;tasklist 列出所有进程&lt;/li&gt;
&lt;li&gt;taskkill /pid xxx -f 杀死指定id
        
      
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="备忘" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="Command" scheme="https://baidi-coder.github.io/tags/Command/"/>
    
  </entry>
  
  <entry>
    <title>杂项/DiscreteMathematicNote</title>
    <link href="https://baidi-coder.github.io/posts/b8e16674/"/>
    <id>https://baidi-coder.github.io/posts/b8e16674/</id>
    <published>2020-05-13T02:58:03.823Z</published>
    <updated>2020-05-30T13:18:28.521Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1&gt;Discrete MatheMatic Note 离散数学笔记&lt;/h1&gt;
&lt;p&gt;Author: BAIDI&lt;br&gt;
Date: from 2020-2-19&lt;/p&gt;
&lt;h2 id=&quot;1-Logic-and-Proofs-逻辑和证明&quot;&gt;1 Logic and Proofs
        
      
    
    </summary>
    
    
      <category term="杂项" scheme="https://baidi-coder.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="Math" scheme="https://baidi-coder.github.io/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>技术/语言/Golang 避坑手册</title>
    <link href="https://baidi-coder.github.io/posts/c737d2b3/"/>
    <id>https://baidi-coder.github.io/posts/c737d2b3/</id>
    <published>2020-02-29T16:00:00.000Z</published>
    <updated>2020-05-31T03:55:19.958Z</updated>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot;{&amp;quot;的位置要注意	分号无&lt;br&gt;
多变量声明：&lt;br&gt;
//类型相同多个变量, 非全局变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;var vname1, vname2, vname3 type&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vname1, vname2, vname3 = v1, v2, v3&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;var vname1, vname2, vname3 = v1, v2, v3 // 和 python 很像,不需要显示声明类型，自动推断&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vname1, vname2, vname3 := v1, v2, v3 // 出现在 := 左侧的变量不应该是已经被声明过的，否则会导致编译错误
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="语言" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="踩坑" scheme="https://baidi-coder.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
      <category term="Go" scheme="https://baidi-coder.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>算法/算法启蒙</title>
    <link href="https://baidi-coder.github.io/posts/8ee1a4a1/"/>
    <id>https://baidi-coder.github.io/posts/8ee1a4a1/</id>
    <published>2020-02-14T13:37:36.000Z</published>
    <updated>2020-05-30T13:59:44.789Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;写在前面：“学好程序与算法，走遍天下都不怕。”&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;枚举&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;背景
&lt;ul&gt;
&lt;li&gt;找不到合适的数学公式和技巧&lt;/li&gt;
&lt;li&gt;（改良后）枚举复杂度不是特别大&lt;/li&gt;
&lt;li&gt;通常用于找到一种情况使之满足题意的题目&lt;/li&gt;
&lt;li&gt;配合假设法找到目标情形：假币问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;技巧
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;跳跃枚举法&lt;/strong&gt;：跳过对没有必要的情况的枚举&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;局部枚举法&lt;/strong&gt;：枚举局部，剩下的由该局部确定。例如熄灯问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;递归&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;作用
&lt;ul&gt;
&lt;li&gt;替代&lt;strong&gt;多重循环&lt;/strong&gt;，如：n皇后问题。
&lt;ul&gt;
&lt;li&gt;这种类型往往要运用到一个&lt;code&gt;全局/静态变量&lt;/code&gt;来存储前面算过的结果，譬如n皇后就用到了一个全局数组来保存每一行的皇后拜访情况。全局/静态变量的好处就在于&lt;code&gt;所有递归函数共享成果&lt;/code&gt;，就像&lt;code&gt;递推迭代&lt;/code&gt;一样，每一步会影响下一步。&lt;/li&gt;
&lt;li&gt;递归函数形式：T function( T f(n) )，函数意义：在前n-1步已经完成的情况下决定如何走第n步，往往第一个被调用的function参数为0或1（然后依次调用 $1$ ~ $n_0$）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解决实质是&lt;strong&gt;递归形式&lt;/strong&gt;的问题
    
    </summary>
    
    
      <category term="算法" scheme="https://baidi-coder.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="动态规划" scheme="https://baidi-coder.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="搜索算法" scheme="https://baidi-coder.github.io/tags/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/"/>
    
      <category term="递归" scheme="https://baidi-coder.github.io/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>技术/语言/C指针扫盲</title>
    <link href="https://baidi-coder.github.io/posts/f1e4bda1/"/>
    <id>https://baidi-coder.github.io/posts/f1e4bda1/</id>
    <published>2019-09-01T11:00:00.000Z</published>
    <updated>2020-05-31T03:54:01.437Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;首先看看函数指针，函数名，以及它们分别与-和-结合后的值&quot;&gt;首先看看函数指针，函数名，以及它们分别与*和&amp;amp;结合后的值&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;程序清单&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;hljs-meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&quot;hljs-built_in&quot;&gt;puts&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;成功调用&quot;&lt;/span&gt;);&amp;#125;;&lt;br&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;br&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;(*p_func)(&lt;span class=&quot;hljs-keyword&quot;&gt;void&lt;/span&gt;)=func;&lt;br&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;puts&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;func是函数名，p_func是指向该函数的指针，那么有:&quot;&lt;/span&gt;);&lt;br&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&quot;func=%p\n*func=%p\n&amp;amp;func=%p\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt; \np_func=%p\n*p_func=%p\&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-string&quot;&gt; \n&amp;amp;p_func=%p&quot;&lt;/span&gt;,func,*func,&amp;amp;func,p_func,\&lt;br&gt; *p_func,&amp;amp;p_func);&lt;br&gt; &lt;br&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//puts(&quot;\n接着我们尝试用上述变量调用函数:&quot;);&lt;/span&gt;&lt;br&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//func();&lt;/span&gt;&lt;br&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//(*func)();&lt;/span&gt;&lt;br&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//(&amp;amp;func)();&lt;/span&gt;&lt;br&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//(p_func)();&lt;/span&gt;&lt;br&gt; &lt;span class=&quot;hljs-comment&quot;&gt;//(*p_func)();&lt;/span&gt;&lt;br&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;执行结果
    
    </summary>
    
    
      <category term="技术" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="语言" scheme="https://baidi-coder.github.io/categories/%E6%8A%80%E6%9C%AF/%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="C/C++" scheme="https://baidi-coder.github.io/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>算法/回合制战斗</title>
    <link href="https://baidi-coder.github.io/posts/aee17ffb/"/>
    <id>https://baidi-coder.github.io/posts/aee17ffb/</id>
    <published>2019-08-31T16:00:00.000Z</published>
    <updated>2020-05-31T03:56:10.767Z</updated>
    
    <summary type="html">
    
      &lt;h1&gt;一小道C语言题带来的乐趣&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt; 要用游戏的玩法打败游戏的情景题!&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
对于以下题目：&lt;br&gt;
某游戏规则中，甲乙双方每个回合的战斗总是有一方胜利，一方失败。游戏规定：失败的一方要把自己的体力值的1/4加给胜利的一方。例如：如果双方体力值当前都是4，则经过一轮战斗后，双方的体力值会变为：5，3。现在已知：双方开始时的体力值甲：1000，乙：2000。假设战斗中，甲乙获胜的概率都是50%，求解：双方经过4个回合的战斗，体力值之差小于1000的理论概率。&lt;br&gt;
用基础模拟算法来解决：
    
    </summary>
    
    
      <category term="算法" scheme="https://baidi-coder.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="题解" scheme="https://baidi-coder.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
</feed>
